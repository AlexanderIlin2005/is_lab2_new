#!/bin/bash

# Устанавливаем имя выходного файла
OUTPUT_FILE="code_contents.txt"

# --- Настройки для безопасной обработки путей с пробелами или спецсимволами ---
IFS=$'\n'
set -f
# ------------------------------------------------------------------------------

# 1. Создаем/перезаписываем файл вывода
> "$OUTPUT_FILE"

echo "Скрипт запущен в $(date)" >> "$OUTPUT_FILE"
echo "--------------------------------------------------" >> "$OUTPUT_FILE"

# 2. Основная логика: рекурсивный поиск файлов с фильтрацией

# Ищем все файлы (-type f) в текущей директории (.),
# ИСКЛЮЧАЯ (-not -name):
# - Самого скрипта
# - Файла вывода
# - Файлов с расширением .jar
find . -type f -not -name "*.jar" -print0 | while IFS= read -r -d '' file
do
    # Исключаем сам скрипт и файл вывода, если они почему-то не были исключены find'ом
    if [[ "$file" == "./recursive_content_export_filtered.sh" ]] || [[ "$file" == "./$OUTPUT_FILE" ]]; then
        continue
    fi

    # Вывод пути к файлу в выходной файл
    echo "" >> "$OUTPUT_FILE"
    echo "==================================================" >> "$OUTPUT_FILE"
    echo "Содержимое файла: $file" >> "$OUTPUT_FILE"
    echo "==================================================" >> "$OUTPUT_FILE"

    # Вывод содержимого файла (включая текстовые, XML, YAML и т.д.)
    cat "$file" >> "$OUTPUT_FILE"

done

# 3. Добавление уведомления об исключенных файлах
echo "" >> "$OUTPUT_FILE"
echo "--- Исключенные типы файлов: .jar (двоичный формат) ---" >> "$OUTPUT_FILE"

# Показываем список пропущенных .jar файлов для справки
find . -type f -name "*.jar" -print | sed 's/^/Пропущен: /' >> "$OUTPUT_FILE"

echo "" >> "$OUTPUT_FILE"
echo "--------------------------------------------------" >> "$OUTPUT_FILE"
echo "Скрипт завершен." >> "$OUTPUT_FILE"

# Восстановление настроек
unset IFS
set +f

echo "✅ Результат (без .jar файлов) сохранен в файл: $OUTPUT_FILE"